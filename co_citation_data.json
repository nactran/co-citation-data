{
    "title_to_code": {
        "Differentiable Product Quantization for End-to-End Embedding Compression": 0,
        "Deep Compression: Compressing Deep Neural Network with Pruning, Trained Quantization and Huffman Coding": 1,
        "Jointly Optimizing Query Encoder and Product Quantization to Improve Retrieval Performance": 2,
        "Learning Multi-granular Quantized Embeddings for Large-Vocab Categorical Features in Recommender Systems": 3,
        "Optimized Product Quantization": 4,
        "PQ-VAE: Efficient Recommendation Using Quantized Embeddings": 5,
        "Product Quantization for Nearest Neighbor Search": 6,
        "Degree-Quant: Quantization-Aware Training for Graph Neural Networks": 7,
        "Differentiable Soft Quantization: Bridging Full-Precision and Low-Bit Neural Networks": 8,
        "Quantization Networks": 9,
        "Vector quantization": 10,
        "Recommender Systems with Generative Retrieval": 11,
        "Learning Vector-Quantized Item Representation for Transferable Sequential Recommenders": 12,
        "Autoregressive Image Generation using Residual Quantization": 13,
        "Quantization": 14,
        "Lost in quantization: Improving particular object retrieval in large scale image databases": 15,
        "Composite Quantization for Approximate Nearest Neighbor Search": 16,
        "Additive Quantization for Extreme Vector Compression": 17,
        "Approximate Nearest Neighbor Search by Residual Vector Quantization": 18,
        "Quantization based Fast Inner Product Search": 19,
        "Iterative Quantization: A Procrustean Approach to Learning Binary Codes for Large-Scale Image Retrieval": 20,
        "Optimized Product Quantization for Approximate Nearest Neighbor Search": 21
    },
    "code_to_title": {
        "0": "Differentiable Product Quantization for End-to-End Embedding Compression",
        "1": "Deep Compression: Compressing Deep Neural Network with Pruning, Trained Quantization and Huffman Coding",
        "2": "Jointly Optimizing Query Encoder and Product Quantization to Improve Retrieval Performance",
        "3": "Learning Multi-granular Quantized Embeddings for Large-Vocab Categorical Features in Recommender Systems",
        "4": "Optimized Product Quantization",
        "5": "PQ-VAE: Efficient Recommendation Using Quantized Embeddings",
        "6": "Product Quantization for Nearest Neighbor Search",
        "7": "Degree-Quant: Quantization-Aware Training for Graph Neural Networks",
        "8": "Differentiable Soft Quantization: Bridging Full-Precision and Low-Bit Neural Networks",
        "9": "Quantization Networks",
        "10": "Vector quantization",
        "11": "Recommender Systems with Generative Retrieval",
        "12": "Learning Vector-Quantized Item Representation for Transferable Sequential Recommenders",
        "13": "Autoregressive Image Generation using Residual Quantization",
        "14": "Quantization",
        "15": "Lost in quantization: Improving particular object retrieval in large scale image databases",
        "16": "Composite Quantization for Approximate Nearest Neighbor Search",
        "17": "Additive Quantization for Extreme Vector Compression",
        "18": "Approximate Nearest Neighbor Search by Residual Vector Quantization",
        "19": "Quantization based Fast Inner Product Search",
        "20": "Iterative Quantization: A Procrustean Approach to Learning Binary Codes for Large-Scale Image Retrieval",
        "21": "Optimized Product Quantization for Approximate Nearest Neighbor Search"
    },
    "co_citation_graph": {
        "0": {
            "1": 2,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1
        },
        "1": {
            "0": 2,
            "6": 1
        },
        "2": {
            "3": 1,
            "0": 1,
            "4": 1,
            "5": 1,
            "6": 1
        },
        "3": {
            "2": 1,
            "0": 1,
            "4": 1,
            "5": 1,
            "6": 2,
            "11": 1,
            "12": 1,
            "13": 1
        },
        "4": {
            "2": 1,
            "3": 1,
            "0": 1,
            "5": 1,
            "6": 2,
            "16": 1,
            "17": 1,
            "18": 1,
            "19": 1,
            "20": 1,
            "21": 1
        },
        "5": {
            "2": 1,
            "3": 1,
            "0": 1,
            "4": 1,
            "6": 1
        },
        "6": {
            "2": 1,
            "3": 2,
            "0": 1,
            "4": 2,
            "5": 1,
            "1": 1,
            "11": 1,
            "12": 2,
            "13": 2,
            "16": 1,
            "17": 1,
            "18": 1,
            "19": 1,
            "20": 1,
            "21": 1
        },
        "7": {
            "8": 1,
            "9": 1
        },
        "8": {
            "7": 1,
            "9": 1
        },
        "9": {
            "7": 1,
            "8": 1
        },
        "11": {
            "12": 1,
            "13": 1,
            "3": 1,
            "6": 1
        },
        "12": {
            "11": 1,
            "13": 2,
            "3": 1,
            "6": 2
        },
        "13": {
            "11": 1,
            "12": 2,
            "3": 1,
            "6": 2
        },
        "14": {
            "15": 1
        },
        "15": {
            "14": 1
        },
        "16": {
            "17": 1,
            "18": 1,
            "19": 1,
            "20": 1,
            "4": 1,
            "6": 1,
            "21": 1
        },
        "17": {
            "16": 1,
            "18": 1,
            "19": 1,
            "20": 1,
            "4": 1,
            "6": 1,
            "21": 1
        },
        "18": {
            "16": 1,
            "17": 1,
            "19": 1,
            "20": 1,
            "4": 1,
            "6": 1,
            "21": 1
        },
        "19": {
            "16": 1,
            "17": 1,
            "18": 1,
            "20": 1,
            "4": 1,
            "6": 1,
            "21": 1
        },
        "20": {
            "16": 1,
            "17": 1,
            "18": 1,
            "19": 1,
            "4": 1,
            "6": 1,
            "21": 1
        },
        "21": {
            "16": 1,
            "17": 1,
            "18": 1,
            "19": 1,
            "20": 1,
            "4": 1,
            "6": 1
        }
    }
}